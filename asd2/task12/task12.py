# Функция для вычисления префикс-функции строки
def prefix_function(pattern):
    # Длина строки
    m = len(pattern)
    # Список для хранения значений префикс-функции
    pi = [0] * m
    # Индекс для сравнения символов
    j = 0
    # Цикл по всем символам строки, начиная со второго
    for i in range(1, m):
        # Пока j > 0 и символы не совпадают, уменьшаем j на значение префикс-функции предыдущего символа
        while j > 0 and pattern[i] != pattern[j]:
            j = pi[j - 1]
        # Если символы совпадают, увеличиваем j на 1
        if pattern[i] == pattern[j]:
            j += 1
        # Присваиваем значение j в список префикс-функции
        pi[i] = j
    # Возвращаем список префикс-функции
    return pi


# Функция для поиска всех вхождений образца в тексте с помощью алгоритма Кнута-Морриса-Пратта
def kmp_search(pattern, text):
    # Длина образца
    m = len(pattern)
    # Длина текста
    n = len(text)
    # Вычисление префикс-функции образца
    pi = prefix_function(pattern)
    # Индекс для сравнения символов образца и текста
    j = 0
    # Список для хранения индексов вхождений
    matches = []
    # Цикл по всем символам текста
    for i in range(n):
        # Пока j > 0 и символы не совпадают, уменьшаем j на значение префикс-функции предыдущего символа образца
        while j > 0 and text[i] != pattern[j]:
            j = pi[j - 1]
        # Если символы совпадают, увеличиваем j на 1
        if text[i] == pattern[j]:
            j += 1
        # Если достигнут конец образца, добавляем индекс вхождения в список и уменьшаем j на значение префикс-функции последнего символа образца
        if j == m:
            matches.append(i - m + 1)
            j = pi[j - 1]
    # Возвращаем список индексов вхождений
    return matches


# Открытие файла с текстом для чтения с помощью оператора with
with open("input.txt", "r") as file:
    # Чтение текста из файла
    text = file.read()
# Ввод образца с клавиатуры
pattern = input("Введите образец: ")
# Проверка, не пустой ли образец
if pattern:
    # Поиск всех вхождений образца в тексте с помощью алгоритма Кнута-Морриса-Пратта
    matches = kmp_search(pattern, text)
    # Вывод результата на экран
    if matches:
        print("Образец найден в тексте на следующих позициях:")
        print(*matches)  # Использование распаковки списка для вывода каждого индекса на отдельной строке
    else:
        print("Образец не найден в тексте.")
else:
    print("Образец не может быть пустым.")
